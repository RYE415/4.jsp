<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">

<!-- spring10 -->
<!-- <bean name="systemMonitor" class="spring10.SystemMonitor">
	<property name="call">
		<ref bean="phoneCall" />
	</property>
</bean> -->

<bean name="systemMonitor" class="spring10.SystemMonitor"
	  autowire="byName">
	
</bean>

<!-- byName에서는 PhoneCall객체를 얻어오기 위해서 멤버변수명과
	 name 이름이 반드시 같아야 된다.(대소문자 구분) -->
<bean name="phonecall" class="spring10.PhoneCall" />
	<!-- <bean name="phoneCall2" class="spring10.PhoneCall" /> -->

<!-- spring11
	 자바에서 객체를 생성X (추상클래스)
	 스프링컨테이너=>해당 자기 자신의 빈 객체를 생성하지 마라 옵션
	 			 5.abstract=true(추상클래스)
	 추상클래스를 상속받는 자식클래스를 이용->6.parent="부모빈즈의 id부여"
	 <bean>태그를 써서 클래스를 등록 1. 객체를 미리 생성할 목적
	 						   2.상속을 이용하기 위해(자식클래스의 객체 생성) 
 -->
 <bean id="commonMonitor" class="spring11.SystemMonitor" abstract="true">
 	<property name="periodTime" value="10" />
 	<property name="sender" ref="smsSender" />
 </bean>
 
 <!-- 1.부모의 멤버변수를 그대로 사용하고 싶다.(부모의 100% 그대로 사용) -->
 
 <bean id="doorMonitor" parent="commonMonitor" />
 
 <!-- 2.periodTime=30(내용을 변경)(매서드 오버라이딩) -->
 <bean id="lobbyMonitor" parent="commonMonitor">
 	<property name="periodTime" value="30" />
 </bean>
 
 <!-- 3.periodTime=40 -->
  <bean id="roomMonitor" parent="commonMonitor">
 	<property name="periodTime" value="40" />
 </bean>
 
 <bean id="smsSender" class="spring11.SmsSender" />




</beans>





